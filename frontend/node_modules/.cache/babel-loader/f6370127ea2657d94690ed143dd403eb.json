{"ast":null,"code":"var _jsxFileName = \"/Users/jinkyumpark/development/book-it-out/src/statistics/DateLineChart.js\";\nimport React from 'react';\nimport { Chart } from 'react-chartjs-2';\nimport { Chart as ChartJS, LinearScale, CategoryScale, PointElement, LineElement } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateLineChart = _ref => {\n  let {\n    endDate = new Date(),\n    startDate,\n    data\n  } = _ref;\n  ChartJS.register(LinearScale, CategoryScale, PointElement, LineElement);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    type: \"line\",\n    data: {\n      labels: [...Array.from({\n        length: 14\n      }, (_, i) => {\n        let day = new Date(startDate).setDate(new Date(startDate).getDate() + i);\n        return new Date(day).getDate() + '일';\n      })],\n      datasets: [{\n        label: false,\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgb(255, 99, 132)',\n        data: data\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_c = DateLineChart;\nexport default DateLineChart;\nvar _c;\n$RefreshReg$(_c, \"DateLineChart\");","map":{"version":3,"names":["React","Chart","ChartJS","LinearScale","CategoryScale","PointElement","LineElement","DateLineChart","endDate","Date","startDate","data","register","labels","Array","from","length","_","i","day","setDate","getDate","datasets","label","backgroundColor","borderColor"],"sources":["/Users/jinkyumpark/development/book-it-out/src/statistics/DateLineChart.js"],"sourcesContent":["import React from 'react';\nimport { Chart } from 'react-chartjs-2';\nimport {\n    Chart as ChartJS,\n    LinearScale,\n    CategoryScale,\n    PointElement,\n    LineElement,\n} from 'chart.js';\n\nconst DateLineChart = ({ endDate = new Date(), startDate, data }) => {\n    ChartJS.register(LinearScale, CategoryScale, PointElement, LineElement);\n\n    return (\n        <Chart\n            type='line'\n            data={{\n                labels: [\n                    ...Array.from(\n                        {\n                            length: 14,\n                        },\n                        (_, i) => {\n                            let day = new Date(startDate).setDate(\n                                new Date(startDate).getDate() + i\n                            );\n                            return new Date(day).getDate() + '일';\n                        }\n                    ),\n                ],\n\n                datasets: [\n                    {\n                        label: false,\n                        backgroundColor: 'rgb(255, 99, 132)',\n                        borderColor: 'rgb(255, 99, 132)',\n                        data: data,\n                    },\n                ],\n            }}\n        />\n    );\n};\n\nexport default DateLineChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SACIA,KAAK,IAAIC,OAAO,EAChBC,WAAW,EACXC,aAAa,EACbC,YAAY,EACZC,WAAW,QACR,UAAU;AAAC;AAElB,MAAMC,aAAa,GAAG,QAA+C;EAAA,IAA9C;IAAEC,OAAO,GAAG,IAAIC,IAAI,EAAE;IAAEC,SAAS;IAAEC;EAAK,CAAC;EAC5DT,OAAO,CAACU,QAAQ,CAACT,WAAW,EAAEC,aAAa,EAAEC,YAAY,EAAEC,WAAW,CAAC;EAEvE,oBACI,QAAC,KAAK;IACF,IAAI,EAAC,MAAM;IACX,IAAI,EAAE;MACFO,MAAM,EAAE,CACJ,GAAGC,KAAK,CAACC,IAAI,CACT;QACIC,MAAM,EAAE;MACZ,CAAC,EACD,CAACC,CAAC,EAAEC,CAAC,KAAK;QACN,IAAIC,GAAG,GAAG,IAAIV,IAAI,CAACC,SAAS,CAAC,CAACU,OAAO,CACjC,IAAIX,IAAI,CAACC,SAAS,CAAC,CAACW,OAAO,EAAE,GAAGH,CAAC,CACpC;QACD,OAAO,IAAIT,IAAI,CAACU,GAAG,CAAC,CAACE,OAAO,EAAE,GAAG,GAAG;MACxC,CAAC,CACJ,CACJ;MAEDC,QAAQ,EAAE,CACN;QACIC,KAAK,EAAE,KAAK;QACZC,eAAe,EAAE,mBAAmB;QACpCC,WAAW,EAAE,mBAAmB;QAChCd,IAAI,EAAEA;MACV,CAAC;IAET;EAAE;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,KAhCIJ,aAAa;AAkCnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}