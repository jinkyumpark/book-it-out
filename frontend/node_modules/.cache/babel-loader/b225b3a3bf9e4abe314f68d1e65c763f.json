{"ast":null,"code":"var _jsxFileName = \"/Users/jinkyumpark/development/book-it-out/src/statistics/ReadTimeChart.js\";\nimport React from 'react';\nimport { Chart } from 'react-chartjs-2';\nimport { Chart as ChartJS, LinearScale, CategoryScale, BarElement, PointElement, LineElement, Legend, Tooltip } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReadTimeChart = _ref => {\n  let {\n    endDate = new Date(),\n    startDate = new Date(endDate).setDate(endDate.getDate - 14),\n    timeData\n  } = _ref;\n  ChartJS.register(LinearScale, CategoryScale, BarElement, PointElement, LineElement, Legend, Tooltip);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    type: \"line\",\n    data: {\n      labels: [...Array.from({\n        length: 14\n      }, (_, i) => {\n        let day = new Date(startDate).setDate(new Date(startDate).getDate() + i);\n        return new Date(day).getDate() + '일';\n      })],\n      datasets: [{\n        label: '',\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgb(255, 99, 132)',\n        data: [...Array.from({\n          length: typeof endDate == 'object' && typeof startDate == 'object' && endDate.getTime() - startDate.getTime() / (1000 * 60 * 60 * 24)\n        }, (_, i) => Math.random() * 250)]\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = ReadTimeChart;\nexport default ReadTimeChart;\nvar _c;\n$RefreshReg$(_c, \"ReadTimeChart\");","map":{"version":3,"names":["React","Chart","ChartJS","LinearScale","CategoryScale","BarElement","PointElement","LineElement","Legend","Tooltip","ReadTimeChart","endDate","Date","startDate","setDate","getDate","timeData","register","labels","Array","from","length","_","i","day","datasets","label","backgroundColor","borderColor","data","getTime","Math","random"],"sources":["/Users/jinkyumpark/development/book-it-out/src/statistics/ReadTimeChart.js"],"sourcesContent":["import React from 'react';\nimport { Chart } from 'react-chartjs-2';\nimport {\n    Chart as ChartJS,\n    LinearScale,\n    CategoryScale,\n    BarElement,\n    PointElement,\n    LineElement,\n    Legend,\n    Tooltip,\n} from 'chart.js';\n\nconst ReadTimeChart = ({\n    endDate = new Date(),\n    startDate = new Date(endDate).setDate(endDate.getDate - 14),\n    timeData,\n}) => {\n    ChartJS.register(\n        LinearScale,\n        CategoryScale,\n        BarElement,\n        PointElement,\n        LineElement,\n        Legend,\n        Tooltip\n    );\n\n    return (\n        <Chart\n            type='line'\n            data={{\n                labels: [\n                    ...Array.from(\n                        {\n                            length: 14,\n                        },\n                        (_, i) => {\n                            let day = new Date(startDate).setDate(\n                                new Date(startDate).getDate() + i\n                            );\n                            return new Date(day).getDate() + '일';\n                        }\n                    ),\n                ],\n\n                datasets: [\n                    {\n                        label: '',\n                        backgroundColor: 'rgb(255, 99, 132)',\n                        borderColor: 'rgb(255, 99, 132)',\n                        data: [\n                            ...Array.from(\n                                {\n                                    length:\n                                        typeof endDate == 'object' &&\n                                        typeof startDate == 'object' &&\n                                        endDate.getTime() -\n                                            startDate.getTime() /\n                                                (1000 * 60 * 60 * 24),\n                                },\n                                (_, i) => Math.random() * 250\n                            ),\n                        ],\n                    },\n                ],\n            }}\n        />\n    );\n};\n\nexport default ReadTimeChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SACIA,KAAK,IAAIC,OAAO,EAChBC,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,YAAY,EACZC,WAAW,EACXC,MAAM,EACNC,OAAO,QACJ,UAAU;AAAC;AAElB,MAAMC,aAAa,GAAG,QAIhB;EAAA,IAJiB;IACnBC,OAAO,GAAG,IAAIC,IAAI,EAAE;IACpBC,SAAS,GAAG,IAAID,IAAI,CAACD,OAAO,CAAC,CAACG,OAAO,CAACH,OAAO,CAACI,OAAO,GAAG,EAAE,CAAC;IAC3DC;EACJ,CAAC;EACGd,OAAO,CAACe,QAAQ,CACZd,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,YAAY,EACZC,WAAW,EACXC,MAAM,EACNC,OAAO,CACV;EAED,oBACI,QAAC,KAAK;IACF,IAAI,EAAC,MAAM;IACX,IAAI,EAAE;MACFS,MAAM,EAAE,CACJ,GAAGC,KAAK,CAACC,IAAI,CACT;QACIC,MAAM,EAAE;MACZ,CAAC,EACD,CAACC,CAAC,EAAEC,CAAC,KAAK;QACN,IAAIC,GAAG,GAAG,IAAIZ,IAAI,CAACC,SAAS,CAAC,CAACC,OAAO,CACjC,IAAIF,IAAI,CAACC,SAAS,CAAC,CAACE,OAAO,EAAE,GAAGQ,CAAC,CACpC;QACD,OAAO,IAAIX,IAAI,CAACY,GAAG,CAAC,CAACT,OAAO,EAAE,GAAG,GAAG;MACxC,CAAC,CACJ,CACJ;MAEDU,QAAQ,EAAE,CACN;QACIC,KAAK,EAAE,EAAE;QACTC,eAAe,EAAE,mBAAmB;QACpCC,WAAW,EAAE,mBAAmB;QAChCC,IAAI,EAAE,CACF,GAAGV,KAAK,CAACC,IAAI,CACT;UACIC,MAAM,EACF,OAAOV,OAAO,IAAI,QAAQ,IAC1B,OAAOE,SAAS,IAAI,QAAQ,IAC5BF,OAAO,CAACmB,OAAO,EAAE,GACbjB,SAAS,CAACiB,OAAO,EAAE,IACd,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;QACpC,CAAC,EACD,CAACR,CAAC,EAAEC,CAAC,KAAKQ,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAChC;MAET,CAAC;IAET;EAAE;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,KAxDItB,aAAa;AA0DnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}