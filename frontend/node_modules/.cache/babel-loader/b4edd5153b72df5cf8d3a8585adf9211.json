{"ast":null,"code":"var _jsxFileName = \"/Users/jinkyumpark/development/book-it-out/src/statistics/ReadTimeChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Chart } from 'react-chartjs-2';\nimport { Chart as ChartJS, LinearScale, CategoryScale, BarElement, PointElement, LineElement, Legend, Tooltip } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReadTimeChart = _ref => {\n  _s();\n  let {\n    startDate = new Date(endDate).setDate(endDate.getDate - 14),\n    endDate = new Date(),\n    timeData\n  } = _ref;\n  ChartJS.register(LinearScale, CategoryScale, BarElement, PointElement, LineElement, Legend, Tooltip);\n  const startEndDateDifference = Math.ceil(Math.abs(endDate - startDate) / (1000 * 60 * 60 * 24));\n  useEffect(() => {\n    console.log(Math.abs(endDate - startDate));\n    console.log();\n    console.log();\n    console.log(Math.ceil(Math.abs(endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24)));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    type: \"line\",\n    data: {\n      labels: [...Array.from({\n        length: startEndDateDifference\n      }, (_, i) => {\n        const day = new Date(startDate).setDate(startDate.getDate() + i);\n        return day.getDate() + '일';\n      })],\n      datasets: [{\n        label: '',\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgb(255, 99, 132)',\n        data: [...Array.from({\n          length: startEndDateDifference\n        }, (_, i) => Math.random() * 250)]\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ReadTimeChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ReadTimeChart;\nexport default ReadTimeChart;\nvar _c;\n$RefreshReg$(_c, \"ReadTimeChart\");","map":{"version":3,"names":["React","useEffect","Chart","ChartJS","LinearScale","CategoryScale","BarElement","PointElement","LineElement","Legend","Tooltip","ReadTimeChart","startDate","Date","endDate","setDate","getDate","timeData","register","startEndDateDifference","Math","ceil","abs","console","log","getTime","labels","Array","from","length","_","i","day","datasets","label","backgroundColor","borderColor","data","random"],"sources":["/Users/jinkyumpark/development/book-it-out/src/statistics/ReadTimeChart.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Chart } from 'react-chartjs-2';\nimport {\n    Chart as ChartJS,\n    LinearScale,\n    CategoryScale,\n    BarElement,\n    PointElement,\n    LineElement,\n    Legend,\n    Tooltip,\n} from 'chart.js';\n\nconst ReadTimeChart = ({\n    startDate = new Date(endDate).setDate(endDate.getDate - 14),\n    endDate = new Date(),\n    timeData,\n}) => {\n    ChartJS.register(\n        LinearScale,\n        CategoryScale,\n        BarElement,\n        PointElement,\n        LineElement,\n        Legend,\n        Tooltip\n    );\n\n    const startEndDateDifference = Math.ceil(\n        Math.abs(endDate - startDate) / (1000 * 60 * 60 * 24)\n    );\n\n    useEffect(() => {\n        console.log(Math.abs(endDate - startDate));\n        console.log();\n        console.log();\n        console.log(\n            Math.ceil(\n                Math.abs(endDate.getTime() - startDate.getTime()) /\n                    (1000 * 60 * 60 * 24)\n            )\n        );\n    }, []);\n\n    return (\n        <Chart\n            type='line'\n            data={{\n                labels: [\n                    ...Array.from(\n                        { length: startEndDateDifference },\n                        (_, i) => {\n                            const day = new Date(startDate).setDate(\n                                startDate.getDate() + i\n                            );\n                            return day.getDate() + '일';\n                        }\n                    ),\n                ],\n\n                datasets: [\n                    {\n                        label: '',\n                        backgroundColor: 'rgb(255, 99, 132)',\n                        borderColor: 'rgb(255, 99, 132)',\n                        data: [\n                            ...Array.from(\n                                { length: startEndDateDifference },\n                                (_, i) => Math.random() * 250\n                            ),\n                        ],\n                    },\n                ],\n            }}\n        />\n    );\n};\n\nexport default ReadTimeChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SACIA,KAAK,IAAIC,OAAO,EAChBC,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,YAAY,EACZC,WAAW,EACXC,MAAM,EACNC,OAAO,QACJ,UAAU;AAAC;AAElB,MAAMC,aAAa,GAAG,QAIhB;EAAA;EAAA,IAJiB;IACnBC,SAAS,GAAG,IAAIC,IAAI,CAACC,OAAO,CAAC,CAACC,OAAO,CAACD,OAAO,CAACE,OAAO,GAAG,EAAE,CAAC;IAC3DF,OAAO,GAAG,IAAID,IAAI,EAAE;IACpBI;EACJ,CAAC;EACGd,OAAO,CAACe,QAAQ,CACZd,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,YAAY,EACZC,WAAW,EACXC,MAAM,EACNC,OAAO,CACV;EAED,MAAMS,sBAAsB,GAAGC,IAAI,CAACC,IAAI,CACpCD,IAAI,CAACE,GAAG,CAACR,OAAO,GAAGF,SAAS,CAAC,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CACxD;EAEDX,SAAS,CAAC,MAAM;IACZsB,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACE,GAAG,CAACR,OAAO,GAAGF,SAAS,CAAC,CAAC;IAC1CW,OAAO,CAACC,GAAG,EAAE;IACbD,OAAO,CAACC,GAAG,EAAE;IACbD,OAAO,CAACC,GAAG,CACPJ,IAAI,CAACC,IAAI,CACLD,IAAI,CAACE,GAAG,CAACR,OAAO,CAACW,OAAO,EAAE,GAAGb,SAAS,CAACa,OAAO,EAAE,CAAC,IAC5C,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAC5B,CACJ;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI,QAAC,KAAK;IACF,IAAI,EAAC,MAAM;IACX,IAAI,EAAE;MACFC,MAAM,EAAE,CACJ,GAAGC,KAAK,CAACC,IAAI,CACT;QAAEC,MAAM,EAAEV;MAAuB,CAAC,EAClC,CAACW,CAAC,EAAEC,CAAC,KAAK;QACN,MAAMC,GAAG,GAAG,IAAInB,IAAI,CAACD,SAAS,CAAC,CAACG,OAAO,CACnCH,SAAS,CAACI,OAAO,EAAE,GAAGe,CAAC,CAC1B;QACD,OAAOC,GAAG,CAAChB,OAAO,EAAE,GAAG,GAAG;MAC9B,CAAC,CACJ,CACJ;MAEDiB,QAAQ,EAAE,CACN;QACIC,KAAK,EAAE,EAAE;QACTC,eAAe,EAAE,mBAAmB;QACpCC,WAAW,EAAE,mBAAmB;QAChCC,IAAI,EAAE,CACF,GAAGV,KAAK,CAACC,IAAI,CACT;UAAEC,MAAM,EAAEV;QAAuB,CAAC,EAClC,CAACW,CAAC,EAAEC,CAAC,KAAKX,IAAI,CAACkB,MAAM,EAAE,GAAG,GAAG,CAChC;MAET,CAAC;IAET;EAAE;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GA/DI3B,aAAa;AAAA,KAAbA,aAAa;AAiEnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}