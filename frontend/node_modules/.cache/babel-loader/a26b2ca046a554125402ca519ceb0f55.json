{"ast":null,"code":"var _jsxFileName = \"/Users/jinkyumpark/development/book-it-out/src/statistics/ReadTimeChart.js\";\nimport React from 'react';\nimport { Chart } from 'react-chartjs-2';\nimport { Chart as ChartJS, LinearScale, CategoryScale, BarElement, PointElement, LineElement, Legend, Tooltip } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReadTimeChart = _ref => {\n  let {\n    length,\n    todayDay,\n    timeData\n  } = _ref;\n  ChartJS.register(LinearScale, CategoryScale, BarElement, PointElement, LineElement, Legend, Tooltip);\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    type: \"line\",\n    data: {\n      labels: [...Array.from({\n        length: length\n      }, (_, i) => i + 1 + todayDay - length / 2 + '일')],\n      datasets: [{\n        label: '',\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgb(255, 99, 132)',\n        data: [...Array.from({\n          length: length\n        }, (_, i) => Math.random() * 250)]\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = ReadTimeChart;\nexport default ReadTimeChart;\nvar _c;\n$RefreshReg$(_c, \"ReadTimeChart\");","map":{"version":3,"names":["React","Chart","ChartJS","LinearScale","CategoryScale","BarElement","PointElement","LineElement","Legend","Tooltip","ReadTimeChart","length","todayDay","timeData","register","labels","Array","from","_","i","datasets","label","backgroundColor","borderColor","data","Math","random"],"sources":["/Users/jinkyumpark/development/book-it-out/src/statistics/ReadTimeChart.js"],"sourcesContent":["import React from 'react';\nimport { Chart } from 'react-chartjs-2';\nimport {\n    Chart as ChartJS,\n    LinearScale,\n    CategoryScale,\n    BarElement,\n    PointElement,\n    LineElement,\n    Legend,\n    Tooltip,\n} from 'chart.js';\n\nconst ReadTimeChart = ({ length, todayDay, timeData }) => {\n    ChartJS.register(\n        LinearScale,\n        CategoryScale,\n        BarElement,\n        PointElement,\n        LineElement,\n        Legend,\n        Tooltip\n    );\n\n    return (\n        <Chart\n            type='line'\n            data={{\n                labels: [\n                    ...Array.from(\n                        { length: length },\n                        (_, i) => i + 1 + todayDay - length / 2 + '일'\n                    ),\n                ],\n                datasets: [\n                    {\n                        label: '',\n                        backgroundColor: 'rgb(255, 99, 132)',\n                        borderColor: 'rgb(255, 99, 132)',\n                        data: [\n                            ...Array.from(\n                                { length: length },\n                                (_, i) => Math.random() * 250\n                            ),\n                        ],\n                    },\n                ],\n            }}\n        />\n    );\n};\n\nexport default ReadTimeChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SACIA,KAAK,IAAIC,OAAO,EAChBC,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,YAAY,EACZC,WAAW,EACXC,MAAM,EACNC,OAAO,QACJ,UAAU;AAAC;AAElB,MAAMC,aAAa,GAAG,QAAoC;EAAA,IAAnC;IAAEC,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC;EACjDX,OAAO,CAACY,QAAQ,CACZX,WAAW,EACXC,aAAa,EACbC,UAAU,EACVC,YAAY,EACZC,WAAW,EACXC,MAAM,EACNC,OAAO,CACV;EAED,oBACI,QAAC,KAAK;IACF,IAAI,EAAC,MAAM;IACX,IAAI,EAAE;MACFM,MAAM,EAAE,CACJ,GAAGC,KAAK,CAACC,IAAI,CACT;QAAEN,MAAM,EAAEA;MAAO,CAAC,EAClB,CAACO,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,GAAGP,QAAQ,GAAGD,MAAM,GAAG,CAAC,GAAG,GAAG,CAChD,CACJ;MACDS,QAAQ,EAAE,CACN;QACIC,KAAK,EAAE,EAAE;QACTC,eAAe,EAAE,mBAAmB;QACpCC,WAAW,EAAE,mBAAmB;QAChCC,IAAI,EAAE,CACF,GAAGR,KAAK,CAACC,IAAI,CACT;UAAEN,MAAM,EAAEA;QAAO,CAAC,EAClB,CAACO,CAAC,EAAEC,CAAC,KAAKM,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAChC;MAET,CAAC;IAET;EAAE;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,KArCIhB,aAAa;AAuCnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}