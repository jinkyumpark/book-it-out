name : book-it-out-ci-cd

on:
  pull_request:
    branches: [main]

env:
  MYSQL_DB: book
  MYSQL_USER: book
  MYSQL_PW: bookitout
  MYSQL_ROOT_PW: root
  JAVA_VERSION: 1.15

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: ${{ env.MYSQL_DB }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PW }}
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PW }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v2

      # - name: Deploy React
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./public

      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      # - name: Set up MySQL
      #   run: |
      #     sudo /etc/init.d/mysql start
      #     mysql -e 'CREATE DATABASE ${{ env.MYSQL_DB }};' -u${{ env.MYSQL_USER }} -p${{ env.MYSQL_PW }}

      - name: Build Spring Project with Gradle
        run: |
          cd BookItOut
          ./gradlew clean build

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_ID }}
          password: ${{ secrets.DOCKER_HUB_PW }}

      - name: Build and Push Docker Image
        run: |
          cd BookItOut
          docker build --platform amd64 -t jinkpark/book-it-out:v1-amd64\
          --build-arg JWT_KEY=$JWT_SECRET_KEY \
          --build-argDB_URL=$DB_URL \
          --build-arg DB_ID=$DB_ID \
          --build-arg DB_PW=$DB_PW \
          --build-arg EMAIL_ID=$EMAIL_ID \
          --build-arg EMAIL_PW=$EMAIL_PW .
          docker push jinkpark/book-it-out:v1-amd64
        env:
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_ID: ${{ secrets.DB_ID }}
          DB_PW: ${{ secrets.DB_PW }}
          EMAIL_ID: ${{ secrets.EMAIL_ID }}
          EMAIL_PW: ${{ secrets.EMAIL_PW }}