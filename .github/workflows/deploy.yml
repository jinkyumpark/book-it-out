name : book-it-out-ci-cd

on:
  pull_request:
    branches: [main]

env:
  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
  BOOK_IT_OUT_DB_URL: ${{ secrets.DB_URL }}
  BOOK_IT_OUT_DB_USERNAME: ${{ secrets.DB_ID }}
  BOOK_IT_OUT_DB_PASSWORD: ${{ secrets.DB_PW }}
  BOOK_IT_OUT_EMAIL_USERNAME: ${{ secrets.EMAIL_ID }}
  BOOK_IT_OUT_EMAIL_PASSWORD: ${{ secrets.EMAIL_PW }}

  MYSQL_DB: book
  MYSQL_USER: book
  MYSQL_PW: bookitout
  MYSQL_ROOT_PW: root
  JAVA_VERSION: 1.15

jobs:
  deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env: 
          MYSQL_DATABASE: ${{ env.MYSQL_DB }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PW }}
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PW }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v2

      - name: Install node modules
        run: npm install

      - name: Deploy React
        run: |
          cd frontend
          npm run deploy

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.MYSQL_DB }};' -u${{ env.MYSQL_USER }} -p${{ env.MYSQL_PW }}

      - name: Build Spring Project with Gradle
        run: ./gradlew clean build

      - name: Docker Login
        uses: docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a
        with:
          username: ${{ secrets.DOCKER_HUB_ID }}
          password: ${{ secrets.DOCKER_HUB_PW }}

      - name: Build Docker Image
        run: docker build --no-cache --platform amd64 -t jinkpark/book-it-out:v1-amd64 .

      - name: Push to Docker Hub
        run: docker push jinkpark/book-it-out:v1-amd64